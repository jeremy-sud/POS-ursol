const mysql = require('mysql2/promise');

// Configuraci√≥n de la conexi√≥n a la base de datos
const connectionConfig = {
  host: 'localhost', // Cambia esto si tu servidor MySQL est√° en otro lugar
  user: 'nuevo_usuario', // Usuario de MySQL
  password: 'nueva_contrase√±a', // Contrase√±a de MySQL
  database: 'pos_db', // Aseg√∫rate de que el nombre coincide con tu base de datos
  port: 3306, // Puerto predeterminado para MySQL (ajusta si usas otro)
};

let connection;

// Funci√≥n para conectar a la base de datos
const connectToDatabase = async () => {
  if (connection) {
    return connection;
  }

  try {
    console.log('Intentando conectar a la base de datos con la siguiente configuraci√≥n:'); // Depuraci√≥n
    console.log(connectionConfig); // Muestra la configuraci√≥n para verificar errores

    connection = await mysql.createConnection(connectionConfig);
    console.log('‚úÖ Conexi√≥n exitosa a la base de datos'); // Depuraci√≥n
    console.log(`üåü Conectado al host: ${connectionConfig.host}, Base de datos: ${connectionConfig.database}`);

    // Probar la conexi√≥n con una consulta inicial
    const [results] = await connection.query('SELECT 1 + 1 AS solution');
    console.log('üîç Consulta de prueba ejecutada exitosamente. Resultado:', results[0].solution); // Depuraci√≥n

    return connection;
  } catch (err) {
    console.error('üö® Error al conectar a la base de datos:'); // Depuraci√≥n
    console.error(`‚ùå Detalles del error: ${err.message}`); // Detalles m√°s claros del error
    console.error('üõ†Ô∏è Verifica que tu servidor MySQL est√© en ejecuci√≥n y que los datos de conexi√≥n sean correctos.');
    process.exit(1); // Detener la aplicaci√≥n si no se puede conectar
  }
};

const getConnection = () => {
  if (!connection) {
    throw new Error('La conexi√≥n a la base de datos no est√° establecida. Llama a connectToDatabase primero.');
  }
  return connection;
};

// Exportar la funci√≥n de conexi√≥n para usarla en otros archivos
module.exports = {
  connectToDatabase,
  getConnection,
};
